library("ggplot2")
library("ggridges")
df<-read.csv("../output/GC_content.csv")
pdf(file = "GC_content.pdf",   # The directory you want to save the file in
width = 15, # The width of the plot in inches
height = 10) # The height of the plot in inches
p <- ggplot(df,aes(x=SCO_GC,y=genome_GC))+
#geom_point(aes(color=HGT_prediction), alpha=0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
#scale_colour_discrete("Suspected HGT")
p <- p+ theme_bw()
df<-read.csv("../output/GC_content.csv")
pdf(file = "GC_content.pdf",   # The directory you want to save the file in
width = 15, # The width of the plot in inches
height = 10) # The height of the plot in inches
p <- ggplot(df,aes(x=SCO_GC,y=genome_GC))+
#geom_point(aes(color=HGT_prediction), alpha=0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)")
#scale_colour_discrete("Suspected HGT")
p <- p+ theme_bw()
plot(p)
dev.off()
library("ggplot2")
library("ggridges")
df<-read.csv("../output/GC_content.csv")
pdf(file = "GC_content.pdf",   # The directory you want to save the file in
width = 15, # The width of the plot in inches
height = 10) # The height of the plot in inches
p <- ggplot(df,aes(x=variable,y=genome_GC))+
#geom_point(aes(color=HGT_prediction), alpha=0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)")
#scale_colour_discrete("Suspected HGT")
p <- p+ theme_bw()
plot(p)
library("ggplot2")
library("ggridges")
df<-read.csv("../output/GC_content.csv")
pdf(file = "GC_content.pdf",   # The directory you want to save the file in
width = 15, # The width of the plot in inches
height = 10) # The height of the plot in inches
p <- ggplot(df,aes(x=variable,y=genome_GC))+
#geom_point(aes(color=HGT_prediction), alpha=0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)")
#scale_colour_discrete("Suspected HGT")
p <- p+ theme_bw()
plot(p)
dev.off()
print(df)
df<-read.csv("../output/GC_content.csv")
print(df)
pdf(file = "GC_content.pdf",   # The directory you want to save the file in
width = 15, # The width of the plot in inches
height = 10) # The height of the plot in inches
p <- ggplot(df,aes(x=SCO_GC,y=genome_GC))+
#geom_point(aes(color=HGT_prediction), alpha=0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)")
#scale_colour_discrete("Suspected HGT")
p <- p+ theme_bw()
plot(p)
dev.off()
df<-read.csv("../output/GC_content.csv")
print(df)
pdf(file = "GC_content.pdf",   # The directory you want to save the file in
width = 15, # The width of the plot in inches
height = 10) # The height of the plot in inches
p <- ggplot(df,aes(x=SCO_GC,y=genome_GC))+
#geom_point(aes(color=HGT_prediction), alpha=0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)")
#scale_colour_discrete("Suspected HGT")
plot(p)
dev.off()
library("ggplot2")
library("ggridges")
df<-read.csv("../output/GC_content.csv")
print(df)
pdf(file = "GC_content.pdf",   # The directory you want to save the file in
width = 15, # The width of the plot in inches
height = 10) # The height of the plot in inches
p <- ggplot(df,aes(x=SCO_GC,y=genome_GC))+
#geom_point(aes(color=HGT_prediction), alpha=0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_point()
#scale_colour_discrete("Suspected HGT")
p <- p+ theme_bw()
plot(p)
dev.off()
# Create the plot
pdf(file='../data/GC_content_03.pdf', width=30, height=50)
# Calculate the slope for the best-fitted line
slope_best_fit <- coef(lm(genome_GC ~ SCO_GC, data = df))[2]
# Create the plot
pdf(file='../data/GC_content_03.pdf', width=30, height=50)
# Calculate the slope for the best-fitted line
slope_best_fit <- coef(lm(genome_GC ~ SCO_GC, data = df))[2]
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
scale_colour_discrete("Suspected HGT") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 70, xend = 73, y = 70, yend = 73, lty = 1, color = 'black') +
geom_text(data = df %>% group_by(orthogroup) %>% summarize(),
aes(label = paste("Angle:", round(calculate_angle(slope_best_fit, (73 - 70) / (73 - 70)), 2))),
x = 56, y = 75, hjust = 0, vjust = 1, size = 3, color = "black")
# Calculate the slope for the best-fitted line
slope_best_fit <- coef(lm(genome_GC ~ SCO_GC, data = df))[2]
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
scale_colour_discrete("Suspected HGT") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 70, xend = 73, y = 70, yend = 73, lty = 1, color = 'black') +
geom_text(data = df %>% group_by(variable) %>% summarize(),
aes(label = paste("Angle:", round(calculate_angle(slope_best_fit, (73 - 70) / (73 - 70)), 2))),
x = 56, y = 75, hjust = 0, vjust = 1, size = 3, color = "black")
# Calculate the angle between two lines
calculate_angle <- function(slope1, slope2) {
atan(abs((slope2 - slope1) / (1 + slope1 * slope2))) * (180 / pi)
}
# Calculate the slope for the best-fitted line
slope_best_fit <- coef(lm(genome_GC ~ SCO_GC, data = df))[2]
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
scale_colour_discrete("Suspected HGT") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 70, xend = 73, y = 70, yend = 73, lty = 1, color = 'black') +
geom_text(data = df %>% group_by(variable) %>% summarize(),
aes(label = paste("Angle:", round(calculate_angle(slope_best_fit, (73 - 70) / (73 - 70)), 2))),
x = 56, y = 75, hjust = 0, vjust = 1, size = 3, color = "black")
# Load required libraries
library(ggplot2)
library(dplyr)
# Sample data
set.seed(123)
df <- data.frame(
SCO_GC = runif(100, 60, 80),
genome_GC = runif(100, 65, 72),
orthogroup = rep(letters[1:10], each = 10)
)
# Calculate the angle between two lines
calculate_angle <- function(slope1, slope2) {
atan(abs((slope2 - slope1) / (1 + slope1 * slope2))) * (180 / pi)
}
# Calculate the slope for the best-fitted line
slope_best_fit <- coef(lm(genome_GC ~ SCO_GC, data = df))[2]
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
scale_colour_discrete("Suspected HGT") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 70, xend = 73, y = 70, yend = 73, lty = 1, color = 'black') +
geom_text(data = df %>% group_by(variable) %>% summarize(),
aes(label = paste("Angle:", round(calculate_angle(slope_best_fit, (73 - 70) / (73 - 70)), 2))),
x = 56, y = 75, hjust = 0, vjust = 1, size = 3, color = "black")
# Calculate the angle between two lines
calculate_angle <- function(slope1, slope2) {
atan(abs((slope2 - slope1) / (1 + slope1 * slope2))) * (180 / pi)
}
# Calculate the slope for the best-fitted line
slope_best_fit <- coef(lm(genome_GC ~ SCO_GC, data = df))[2]
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 70, xend = 73, y = 70, yend = 73, lty = 1, color = 'black') +
geom_text(data = df %>% group_by(variable) %>% summarize(),
aes(label = paste("Angle:", round(calculate_angle(slope_best_fit, (73 - 70) / (73 - 70)), 2))),
x = 56, y = 75, hjust = 0, vjust = 1, size = 3, color = "black")
# Load required libraries
library(ggplot2)
library(dplyr)
# Sample data
set.seed(123)
df <- data.frame(
SCO_GC = runif(100, 60, 80),
genome_GC = runif(100, 65, 72),
orthogroup = rep(letters[1:10], each = 10)
)
# Calculate the angle between two lines
calculate_angle <- function(slope1, slope2) {
atan(abs((slope2 - slope1) / (1 + slope1 * slope2))) * (180 / pi)
}
# Calculate the slope for the best-fitted line
slope_best_fit <- coef(lm(genome_GC ~ SCO_GC, data = df))[2]
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 70, xend = 73, y = 70, yend = 73, lty = 1, color = 'black')
p <- p + theme_bw()
print(p)
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75)
p <- p + theme_bw()
print(p)
df<-read.csv("../output/GC_content.csv")
print(df)
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75)
p <- p + theme_bw()
print(p)
dev.off()
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "blue") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 70, xend = 73, y = 70, yend = 73, lty = 1, color = 'black')
p <- p + theme_bw()
print(p)
dev.off()
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "red") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 67, xend = 75, y = 67, yend = 75, lty = 1, color = 'black')
p <- p + theme_bw()
print(p)
dev.off()
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "red") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 67, xend = 75, y = 67, yend = 75, lty = 1, color = 'blue')
p <- p + theme_bw()
print(p)
dev.off()
library("ggplot2")
library("ggridges")
df<-read.csv("../output/GC_content.csv")
print(df)
# Create the plot
pdf(file='GC_content_03.pdf', width=30, height=50)
p <- ggplot(df, aes(x = SCO_GC, y = genome_GC)) +
geom_point(alpha = 0.2) +
xlab("SCO GC content (%)") + ylab("Genome GC content (%)") +
geom_smooth(method = lm, se = FALSE, color = "red") +
facet_wrap(variable ~ ., scales = 'free_x', nrow = 10, shrink = TRUE, dir = 'h') +
xlim(56, 82) + ylim(66, 75) +
geom_segment(x = 67, xend = 75, y = 67, yend = 75, lty = 1, color = 'blue')
p <- p + theme_bw()
print(p)
dev.off()
